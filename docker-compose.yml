services:
  postgres:
    image: postgres:15-alpine
    container_name: myowncloud-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - myowncloud-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: myowncloud-backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      JWT_SECRET: ${JWT_SECRET}
      GROQ_API_KEY: ${GROQ_API_KEY}
      NODE_ENV: ${NODE_ENV}
      PORT: ${PORT}
    env_file:
      - .env
    volumes:
      - ./uploads:/app/uploads
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    networks:
      - myowncloud-network
    restart: unless-stopped

  frontend:
    build:
      context: ./myowncloud-client
      dockerfile: Dockerfile
    container_name: myowncloud-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - myowncloud-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  myowncloud-network:
    driver: bridge

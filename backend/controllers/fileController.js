// Contains the business logic of uploading files.
const { PrismaClient } = require('@prisma/client'); // to interact with the database via Prisma
const prisma = new PrismaClient(); // create a new Prisma client instance

const path = require('path'); // built-in Node.js module for handling file paths and operations
const fs = require('fs'); // built-in Node.js module for file system operations

exports.uploadFile = async (req, res) => {
    const userId = req.user.userId; // JWT middleware sets req.user, which contains userId

    if(!req.file){
        return res.status(400).json({message: 'No file uploaded'});
    }
//   const {
//      originalname,   // "resume.pdf" — the name of the file from the user's machine
//      mimetype,       // "application/pdf" — the type of file (used for validation later)
//      size,           // 23948 — size of the file in bytes
//      filename,       // "1690658342193-resume.pdf" — unique name generated by multer
//      path: filepath  // "uploads/1690658342193-resume.pdf" — file’s saved path on disk, renamed to `filepath` in our code
//  } = req.file;

    // Destructure metadata from the uploaded file
    const { originalname, mimetype, size, filename, path: filepath} = req.file;
    try{
        const file = await prisma.file.create({
            data: {
                filename: originalname, // original file name sent by the user
                filepath,               // path where the file is stored on the server
                mimetype,               // type of the file (e.g., application/pdf)
                size,                   // size of the file in bytes
                user: { connect: { id: userId}} // associate the file with the user who uploaded it
            }
        });

        res.status(201).json({
            message: 'File uploaded successfully',
            fileId: file.id, // return the ID of the newly created file
        });
    } catch (error) {
        console.error('Error uploading file:', error);
        res.status(500).json({ message: 'Internal server error: Upload failed' });
    }
};